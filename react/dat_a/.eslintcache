[{"/home/mclovin/git/WebInt-DATa/react/dat_a/src/index.js":"1","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/researcher.jsx":"2","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Summary.jsx":"3","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Annotator.jsx":"4","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/layout.jsx":"5","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Footer.jsx":"6","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Home.jsx":"7","/home/mclovin/git/WebInt-DATa/react/dat_a/src/App.js":"8","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/TaskPage.js":"9","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/createTask.jsx":"10","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/NewImage.js":"11","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Task.js":"12"},{"size":661,"mtime":1610941540668,"results":"13","hashOfConfig":"14"},{"size":2027,"mtime":1610944136666,"results":"15","hashOfConfig":"14"},{"size":1441,"mtime":1610933735685,"results":"16","hashOfConfig":"14"},{"size":1508,"mtime":1610933734789,"results":"17","hashOfConfig":"14"},{"size":330,"mtime":1610933735681,"results":"18","hashOfConfig":"14"},{"size":310,"mtime":1610933735649,"results":"19","hashOfConfig":"14"},{"size":3380,"mtime":1610933735649,"results":"20","hashOfConfig":"14"},{"size":2170,"mtime":1610943018315,"results":"21","hashOfConfig":"14"},{"size":1081,"mtime":1610944885182,"results":"22","hashOfConfig":"14"},{"size":3930,"mtime":1610945173433,"results":"23","hashOfConfig":"14"},{"size":1270,"mtime":1610940337800,"results":"24","hashOfConfig":"14"},{"size":1331,"mtime":1610945887688,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nxfzx9",{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/home/mclovin/git/WebInt-DATa/react/dat_a/src/index.js",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/researcher.jsx",["54","55","56","57","58","59"],"import React, { useState, useEffect } from \"react\";\nimport {app} from \"../base\" ;\nimport store from \"store\";\nimport TaskListItem from \"./task-list-item\";\nimport Heading from \"./heading\";\nimport Button from \"./button\";\nimport HyperLink from \"./hyperlink\";\nimport {Link, Route} from 'react-router-dom';\nimport {TaskPage} from \"./TaskPage\"\n\n\nconst db = app.firestore() ;\n\n\n// Main function of the Page \nconst Researcher = () => {\n  \n  // TODO : Get the list from Firebase instead of localstorage\n  const [tasks, setTasks] = useState([]);\n  // const [TaskList, setTaskList] = useState([]);\n  // const checkmark = 'âœ“';\n  \n  // Get the list of Tasks from the database and return it to setTasks\n  useEffect(() => {\n    const unmount = db.collection(\"tasks\").onSnapshot((snapshot) => {\n      const tempTasks = [];\n      snapshot.forEach((doc) => {\n        tempTasks.push({ ...doc.data(), id: doc.id });\n      });\n      setTasks(tempTasks);\n    });\n    return unmount;\n  }, []);\n\n\n  return (\n    \n\n    <div className=\"researcher\">\n      <div className=\"container\">  \n        <div className=\"row align-items-left my-5\">\n          \n          <Route path=\"/\" render={() => <TaskPage tasks={tasks}/>}/>\n          \n            \n            {/* {\n              TaskList && TaskList.map((TaskItem, idx) => {\n                return `${TaskItem.length}` <= `${TaskItem.labels.length}` ?\n                <TaskListItem key={`Task-${idx}`}>{`${idx + 1} - ${TaskItem.Task\n                  } - ${TaskItem.labels.length} / ${TaskItem.length} ${checkmark}`}\n                </TaskListItem>\n                  :\n                <TaskListItem key={`Task-${idx}`}>{`${idx + 1} - ${TaskItem.Task\n                } -  ${TaskItem.labels.length} / ${TaskItem.length}`}</TaskListItem>\n              })\n            } */}\n          \n          \n          {/* <HyperLink path=\"/annotator\">\n            <Button>Change role to annotator</Button>\n          </HyperLink> */}\n        </div> \n      </div> \n    </div>\n    // </div>\n  );\n};\n\nexport default Researcher;\n","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Summary.jsx",["60","61","62","63","64","65","66","67","68","69","70"],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Annotator.jsx",["71","72","73","74","75","76","77"],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/layout.jsx",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Footer.jsx",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Home.jsx",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/App.js",["78"],"import React , {useState, useEffect} from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home, About, Contact, Login } from \"./components\";\nimport Layout from \"./components/layout\";\nimport AuthorisedPageContainer from \"./components/authorised-page-container\";\nimport Roles from \"./components/Roles\";\nimport store from \"store\";\nimport Researcher from \"./components/researcher\";\nimport Annotator from \"./components/Annotator\"\nimport CreateTask from \"./components/createTask\"\nimport CompleteTask from \"./components/CompleteTask\"\nimport Summary from \"./components/Summary\"\n\n\n//Image Handling Imports  \nimport { app } from \"./base\";\n\n\nconst db = app.firestore();\n\nfunction App() {\n  \n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n    const unmount = db.collection(\"albums\").onSnapshot((snapshot) => {\n      const tempAlbums = [];\n      snapshot.forEach((doc) => {\n        tempAlbums.push({ ...doc.data(), id: doc.id });\n      });\n      setAlbums(tempAlbums);\n    });\n    return unmount;\n  }, []);\n  \n  \n  \n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact component={() => store.get(\"authorised\") ? <Roles /> : <Home />} />{\" \"}\n            <Route path=\"/about\" exact component={() => <About />} />{\" \"}\n            <Route path=\"/contact\" exact component={() => <Contact />} />{\" \"}\n            <Route path=\"/login\" exact component={() => store.get(\"authorised\") ? <Roles /> : <Login />} />{\" \"}\n            <Route path=\"/Authorised\" exact component={() => <AuthorisedPageContainer />} />{\" \"}\n            <Route path=\"/researcher\" exact component={() => <Researcher/>} />{\" \"}\n            <Route path=\"/annotator\" exact component={() => <Annotator/>} />{\" \"}\n            <Route path=\"/createTask\" exact component={() => <CreateTask/>} />{\" \"}\n            <Route path=\"/completeTask/:Tasknum\" exact component={() => <CompleteTask/>} />{\" \"}\n            <Route path=\"/summary/:Tasknum\" exact component={() => <Summary/>} />{\" \"}\n          </Switch>{\" \"}\n        </Layout>{\" \"}\n      </Router>{\" \"}\n    </div>\n  );\n}\n\nexport default App;\n","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/TaskPage.js",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/createTask.jsx",["79","80","81","82","83","84","85","86"],"import React, { useState } from \"react\";\nimport store from \"store\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n} from \"react-router-dom\";\n\nimport TaskListItem from \"./task-list-item\";\nimport { useHistory } from \"react-router-dom\";\n// import AuthFormBox from \"./auth-form-box\";\nimport Button from \"./button\";\n\n//Firebase Import\nimport { app } from \"../base\";\n\n// Image Import \n// import {NewImage} from \"./NewImage\"\n\n//---------------------------------------------------------------------\n\n\n\nconst db = app.firestore();\n// var TaskName = \"Default Task Name\";\n\nconst CreateTask = () => {\n  \n  const [taskName, setTaskName] = useState(\"\");\n  const [taskLength, setTaskLength] = useState(0);\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  \n  \n  // Handling Task Parameter Changes\n  const onTaskNameChange = (e) => {\n    setTaskName(e.target.value);\n  };\n\n  const onTaskDescriptionChange = (e) => {\n    setTaskDescription(e.target.value);\n  };\n\n  const onTaskLengthChange = (e) => {\n    setTaskLength(e.target.value);\n  };\n  \n  // Handling Task Submit \n  const onTaskSubmit = () => {\n    if (!taskName) {\n      return;\n    }\n    db.collection(\"tasks\").doc(taskName).set({\n      name: taskName,\n      description: taskDescription,\n      length: taskLength,\n      labels: []\n    });\n    setTaskName(\"\");\n    //  console.log(TaskList);\n    console.log(\"creation\");\n    history.push(\"/researcher\");\n  };\n\n  const history = useHistory();\n\n  // const onTaskSubmit = (e) => {\n  //   if(!taskName ||){\n  //     return\n  //   }\n    \n    \n  //   db.collection(\"tasks\").doc(taskName).set({\n  //     name: taskName,\n  //     description: taskDescription,\n  //     length: 0,\n  //     labels: []\n  //   });\n  // }\n\n\n\n  // const [title, setTitle] = useState(\"Unnamed task\");\n  // const [TaskList, setTaskList] = useState(\n  //   store.get(\"TaskList\") || []\n  // );\n  // const handleDescriptionChange = (e) => {\n    // setDescription(e.target.value);\n  // };\n  // const handleTitleChange = (e) => {\n    // setTitle(e.target.value);\n  // };\n  // const handleLengthChange = (e) => {\n    // setLength(e.target.value);\n  // };\n  // const handleTaskSubmit = (e) => {\n  //   TaskList.push({\n  //     Task: title,\n  //     description: description,\n  //     length: length,\n  //     labels: []\n  //   });\n  //   console.log(TaskList);\n  //   setTaskList(TaskList);\n  //   store.set(\"TaskList\", TaskList);\n  //   console.log(\"creation\");\n  //   history.push(\"/researcher\");\n  // };\n  \n  \n  \n  \n  \n  return (\n    <div>\n      <div className=\"container\">\n        <h1>Create a new Task</h1>\n        <div className='flex-container'>\n          <form className='form' onSubmit={onTaskSubmit}>\n                <div>\n                  <label> Name of the task\n                  <input\n                    name=\"Name\"\n                    type=\"text\"\n                    value={taskName}\n                    onChange={onTaskNameChange} />\n                  </label>\n                <div>\n                </div>\n                <label> Description\n                <textarea\n                  name=\"description\"\n                  type=\"text\"\n                  value={taskDescription}\n                  onChange={onTaskDescriptionChange} />\n                </label>\n                <div>\n                </div>\n                <label> Dataset length (# of Pictures)\n                <input\n                  name=\"numpic\"\n                  type=\"number\"\n                  value={taskLength}\n                  onChange={onTaskLengthChange}/>\n                </label>\n                <div>\n                </div>\n                {/* <label> Upload Pictures\n                  NewImage\n                </label> */}\n                </div>\n                \n                <Button onClick={onTaskSubmit}>Create</Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default CreateTask;\n","/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/NewImage.js",[],"/home/mclovin/git/WebInt-DATa/react/dat_a/src/components/Task.js",["87","88"],"import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch, Link } from \"react-router-dom\";\nimport { NewImage } from \"./NewImage\";\nimport { app } from \"../base\";\n\nconst db = app.firestore();\n\nexport const Task = () => {\n  const [images, setImages] = useState([]);\n  const [taskName, setTaskName] = useState(\"\");\n  const [taskLength, setTaskLength] = useState(0);\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  \n\n  const match = useRouteMatch(\"/:task\");\n  const { task } = match.params;\n\n  useEffect(() => {\n    const unmount = db.collection(\"tasks\")\n      .doc(task)\n      .onSnapshot((doc) => {\n        setImages(doc.data().images || []);\n        setTaskName(doc.data().name);\n        setTaskLength(doc.data().length);\n        setTaskDescription(doc.data().description);\n      });\n      return unmount\n  }, []);\n\n  return (\n    <>\n      <section>\n        <header>\n          <h1>{taskName}</h1>\n          <p>Go to the <Link to=\"/researcher\">Task page</Link></p>\n        </header>\n        <div>\n           <h2>{taskDescription}</h2> \n        </div>\n        {images.map((image) => (\n          <aside key={image.name}>\n            <img src={image.url} alt=\"task\" />\n          </aside>\n        ))}\n      </section>\n      <footer>\n        <NewImage currentTask={task} />\n      </footer>\n    </>\n  );\n};\n",{"ruleId":"89","severity":1,"message":"90","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":13},{"ruleId":"89","severity":1,"message":"93","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":20},{"ruleId":"89","severity":1,"message":"94","line":5,"column":8,"nodeType":"91","messageId":"92","endLine":5,"endColumn":15},{"ruleId":"89","severity":1,"message":"95","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":14},{"ruleId":"89","severity":1,"message":"96","line":7,"column":8,"nodeType":"91","messageId":"92","endLine":7,"endColumn":17},{"ruleId":"89","severity":1,"message":"97","line":8,"column":9,"nodeType":"91","messageId":"92","endLine":8,"endColumn":13},{"ruleId":"89","severity":1,"message":"94","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":15},{"ruleId":"89","severity":1,"message":"98","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":16},{"ruleId":"89","severity":1,"message":"99","line":6,"column":10,"nodeType":"91","messageId":"92","endLine":6,"endColumn":19},{"ruleId":"89","severity":1,"message":"100","line":9,"column":20,"nodeType":"91","messageId":"92","endLine":9,"endColumn":26},{"ruleId":"89","severity":1,"message":"101","line":10,"column":3,"nodeType":"91","messageId":"92","endLine":10,"endColumn":9},{"ruleId":"89","severity":1,"message":"102","line":11,"column":3,"nodeType":"91","messageId":"92","endLine":11,"endColumn":8},{"ruleId":"89","severity":1,"message":"97","line":12,"column":3,"nodeType":"91","messageId":"92","endLine":12,"endColumn":7},{"ruleId":"89","severity":1,"message":"103","line":14,"column":3,"nodeType":"91","messageId":"92","endLine":14,"endColumn":12},{"ruleId":"89","severity":1,"message":"104","line":19,"column":20,"nodeType":"91","messageId":"92","endLine":19,"endColumn":31},{"ruleId":"89","severity":1,"message":"105","line":26,"column":18,"nodeType":"91","messageId":"92","endLine":26,"endColumn":27},{"ruleId":"89","severity":1,"message":"106","line":27,"column":21,"nodeType":"91","messageId":"92","endLine":27,"endColumn":33},{"ruleId":"89","severity":1,"message":"100","line":3,"column":20,"nodeType":"91","messageId":"92","endLine":3,"endColumn":26},{"ruleId":"89","severity":1,"message":"101","line":4,"column":3,"nodeType":"91","messageId":"92","endLine":4,"endColumn":9},{"ruleId":"89","severity":1,"message":"102","line":5,"column":3,"nodeType":"91","messageId":"92","endLine":5,"endColumn":8},{"ruleId":"89","severity":1,"message":"97","line":6,"column":3,"nodeType":"91","messageId":"92","endLine":6,"endColumn":7},{"ruleId":"89","severity":1,"message":"103","line":8,"column":3,"nodeType":"91","messageId":"92","endLine":8,"endColumn":12},{"ruleId":"89","severity":1,"message":"107","line":18,"column":7,"nodeType":"91","messageId":"92","endLine":18,"endColumn":12},{"ruleId":"89","severity":1,"message":"104","line":19,"column":20,"nodeType":"91","messageId":"92","endLine":19,"endColumn":31},{"ruleId":"89","severity":1,"message":"108","line":23,"column":10,"nodeType":"91","messageId":"92","endLine":23,"endColumn":16},{"ruleId":"89","severity":1,"message":"90","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},{"ruleId":"89","severity":1,"message":"100","line":4,"column":20,"nodeType":"91","messageId":"92","endLine":4,"endColumn":26},{"ruleId":"89","severity":1,"message":"101","line":5,"column":3,"nodeType":"91","messageId":"92","endLine":5,"endColumn":9},{"ruleId":"89","severity":1,"message":"102","line":6,"column":3,"nodeType":"91","messageId":"92","endLine":6,"endColumn":8},{"ruleId":"89","severity":1,"message":"97","line":7,"column":3,"nodeType":"91","messageId":"92","endLine":7,"endColumn":7},{"ruleId":"89","severity":1,"message":"109","line":8,"column":3,"nodeType":"91","messageId":"92","endLine":8,"endColumn":16},{"ruleId":"89","severity":1,"message":"103","line":9,"column":3,"nodeType":"91","messageId":"92","endLine":9,"endColumn":12},{"ruleId":"89","severity":1,"message":"93","line":12,"column":8,"nodeType":"91","messageId":"92","endLine":12,"endColumn":20},{"ruleId":"89","severity":1,"message":"110","line":11,"column":10,"nodeType":"91","messageId":"92","endLine":11,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":8,"suggestions":"114"},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'TaskListItem' is defined but never used.","'Heading' is defined but never used.","'Button' is defined but never used.","'HyperLink' is defined but never used.","'Link' is defined but never used.","'TextArea' is defined but never used.","'PropTypes' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'setTaskList' is assigned a value but never used.","'setLabels' is assigned a value but never used.","'setCompleted' is assigned a value but never used.","'match' is assigned a value but never used.","'albums' is assigned a value but never used.","'useRouteMatch' is defined but never used.","'taskLength' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'task'. Either include it or remove the dependency array.","ArrayExpression",["115"],{"desc":"116","fix":"117"},"Update the dependencies array to be: [task]",{"range":"118","text":"119"},[841,843],"[task]"]